<div class="row mt-5">
  <div class="col-md-7">
    <form action="/tweets" method="POST">
      <div class="form-group">
        <textarea id="tweet" class="form-control" name="description" placeholder="what's on your mind?"  style="border-radius: 8px; height: 150px" maxlength="140" oninput="countCharacters()"></textarea>
				<a data-toggle="collapse" data-target="#pac-input">
					<i class="fa fa-map-marker text-danger" aria-hidden="true"></i>
					打卡
				</a>
				<input id="pac-input" class="controls collapse mt-2" type="text" placeholder="Search Box">
				<input type="hidden" id="url" name="url" value="">
				<input type="hidden" id="name" name="name" value="">
      </div>
			
       <div class="text-muted"><small>characters left:</small>
        <span id="charactersLeft"><small>140</small></span></div>
      <br>  
      <button class="btn btn-info float-right" type="submit">Tweet</button>
    </form>    
    <br>
    <br>
    {{#each tweets}}
    <div class="card mb-3 mt-5">
    	<div class="row">
    		<div class="col-md-4 my-4">
    			<img src="{{this.User.avatar}}" alt="{{this.User.name}}" width="170px" height="170px" class="rounded ml-2">
    		</div>
    		<div class="col-md-8 pt-2">
    			<div class="card-body">
    				<h5 class="card-title">
    					<a href="/users/{{this.User.id}}/tweets" style="text-decoration:none;">@{{ this.User.name }}</a>
    					<small class="pl-2">&nbsp;{{ moment this.createdAt }}</small></h5>
    				<p class="card-text pl-1" style="overflow:hidden;
              white-space: nowrap;
              text-overflow: ellipsis;
              display: -webkit-box;
              -webkit-line-clamp: 2;
              -webkit-box-orient: vertical;
              white-space: normal;">
              {{ this.description }}
            </p>
    			</div>
    			<div class="card-body text-right inline-block mt-1">
    				<a href="/tweets/{{this.id}}/replies" class="btn btn-outline-info
              mr-2">
    					Reply({{ this.replyCount }})</a>
    				{{#if this.isLiked }}
    					<form action="/tweets/{{this.id}}/unlike" method="POST" style="display: contents;">
    						<button type="submit" class="btn btn-danger">
    							<i class="fa fa-heart" aria-hidden="true"></i>
    							({{ this.likeCount }})
    						</button>
    					</form>
    				{{else}}
    					<form action="/tweets/{{this.id}}/like" method="POST" style="display: contents;">
    						<input type="hidden" name="userId" value="{{this.id}}" />
    						<button type="submit" class="btn btn-secondary">
    							<i class="fa fa-heart" aria-hidden="true"></i>
    							({{ this.likeCount }})
    						</button>
    					</form>
    				{{/if}}
    			</div>
    		</div>
    	</div>
    </div>
    {{/each}}
  </div>
  <div class="col-md-5">
    <h1 class="text-info">
      <strong style="font-family:serif;">Popular</strong></h1>
    <br>
    {{#each users}}
     <div class="card mb-3">
      <div class="row">
        <div class="col-md-4 my-4">
          <img src="{{this.avatar}}" alt="{{this.name}}" width="100px" height="100px" class="rounded ml-2">
        </div>

        <div class="col-md-8">
          <div class="card-body">
            <h5><a href="/users/{{this.id}}/tweets" style="text-decoration:none;">{{this.name}}</a></h5>
            <p style="overflow:hidden;
              white-space: nowrap;
              text-overflow: ellipsis;
              display: -webkit-box;
              -webkit-line-clamp: 2;
              -webkit-box-orient: vertical;
              white-space: normal;">
              {{ this.introduction}}
            </p>
          </div>
        </div>
        <div class="card-body row mt-1 ml-5">
          {{#ifNotCond this.id ../user.id}}
            {{#if this.isFollowed }}
              <form action="/followships/{{this.id}}?_method=DELETE" method="POST">
                <button type="submit" class="btn btn-danger" name="id" value={{this.id}}><i class="fa fa-user px-2" aria-hidden="true"></i>
                </button>
              </form>
            {{else}}
              <form action="/followships" method="POST">
                <button type="submit" class="btn btn-secondary" name="id" value={{this.id}}>
                  <i class="fa fa-user-plus px-2" aria-hidden="true"></i>
                </button>
              </form>
            {{/if}}
          {{/ifNotCond}}

          {{#ifNotCond this.id ../user.id}}
          <a class="btn btn-outline-success ml-2"
            onclick="window.open('https://simple-twitter-demo.herokuapp.com/chat/{{this.id}}', 'Chatroom', config='height=592, width=500')">
            {{!-- onclick="window.open('http://localhost:3000/chat/{{this.id}}', 'Chatroom', config='height=592, width=500')"> --}}
            <i class="fa fa-comments-o px-2" aria-hidden="true"></i>
          </a>
          {{/ifNotCond}}
        </div>
				</div>
     </div>

    {{/each}}
  </div>
</div>


<script>
  function countCharacters() {
    let textEntered, countRemaining, counter;
    textEntered = document.getElementById('tweet').value;
    counter = (140 - (textEntered.length))
    countRemaining = document.getElementById('charactersLeft');
    if (counter === 0) {
      countRemaining.className = "text-danger"
    } else {
      countRemaining.className = "text-muted"
    }
    countRemaining.textContent = counter;
  }
function initAutocomplete() {
  var url = document.getElementById('url')
  var name = document.getElementById('name')
  var input = document.getElementById('pac-input')
	// Bias the SearchBox results towards current map's viewport.
	var searchBox = new google.maps.places.SearchBox(input);
		
	// Listen for the event fired when the user selects a prediction and retrieve
	// more details for that place.
  searchBox.addListener('places_changed', function () {
    var places = searchBox.getPlaces()
    if (places.length == 0) {
      return;
    }
  places.forEach(function (place) {
    if (!place.geometry) {
      console.log("Returned place contains no geometry");
       return;
    }
      });
      url.value = places[0].url
      name.value = places[0].name
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places&callback=initAutocomplete" async defer></script>

